package com.fastcampus.ch2;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

//
@Controller
public class YoilTellerMVC {
	@RequestMapping("/getYoilMVC") //http://localhost:8282/ch2/getYoilMVC?year=2021&month=10&day=1
//	public void main(HttpServletRequest request, HttpServletResponse response) throws IOException {
//	public void main(String year, String month , String day, HttpServletResponse response) throws IOException {
	//public String main(int year, int month , int day, Model model) throws IOException {//입력을 직접받는걸로 처리해서 코드가 간단해졌다! 
	public void main(int year, int month , int day, Model model) throws IOException {	 
//String 대신에 반환타입을 void로 하고 반환타입을 반환하지 않을 수 있다 그럼녀 view의 이름은 mapping된 url에 의해 이름이 결정된다
	     
		 //1.유효성 검사
//		if(!isValid(year,month,day))
//			return "yoilError";
//		
		//2. 요일계산
		char yoil =getYoil(year, month, day);
	    
		//3. 계산한 결과를 모델에 저장
		model.addAttribute("year",year);
		model.addAttribute("month",month);
		model.addAttribute("day",day);
		model.addAttribute("yoil",yoil);

		
//	    return "yoil"; // /WEB-INF/view/yoil.jsp > 반환하는 yoil이 String 이기 때문에 메서드의 반환타입을 변경해야한다.
	        
	      
	     //3. 출력 부분은 별도의 jsp 파일로 작성할것임!!!
	     //jsp 파일은 src>main>webapp>WEB-INF>view에 작성하면된다
	}

	//유효성검사하는 메서드
	private boolean isValid(int year, int month, int day) { //클래스 안에서만 사용하기 때문에 private!
		return true;
	}

	//요일을 계산하는 메서드
	private char getYoil(int year, int month, int day) {
	     Calendar cal = Calendar.getInstance();
	     cal.set(year,month-1,day);
	     
	     int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK); //1:일 ,2:월.....
	     return " 일월화수목금토".charAt(dayOfWeek);
	}

}
